name: Run Local Integration Tests

on: [push]

jobs:
  local_integration:
    runs-on: ubuntu-latest
    environment:
      name: selfhosted
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18" # Specify a Node.js version

      # This is to force nx arch-specific packages to correctly install
      # This is to work around https://github.com/npm/cli/issues/4828
      - name: Remove package-lock.json
        run: rm -f package-lock.json

      - name: Install dependencies
        run: npm install

      # Workaround for https://github.com/actions/runner-images/issues/2821
      - name: Remove mono blocking 8084 port
        run: sudo kill -9 $(sudo lsof -t -i:8084)

      - name: Set up Docker
        run: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }} registry.camunda.cloud

      - name: Set up Docker Compose
        run: |
          docker-compose -f docker/docker-compose.yml -f docker/docker-compose-modeler.yaml up -d

      - name: Run Integration Tests
        run: |
          npm run test:local-integration
        env:
          CAMUNDA_SECURE_CONNECTION: false
          ZEEBE_ADDRESS: localhost:26500
          ZEEBE_CLIENT_ID: zeebe
          ZEEBE_CLIENT_SECRET: zecret
          CAMUNDA_OAUTH_URL: http://localhost:18080/auth/realms/camunda-platform/protocol/openid-connect/token
          CAMUNDA_TASKLIST_BASE_URL: http://localhost:8082
          CAMUNDA_OPERATE_BASE_URL: http://localhost:8081
          CAMUNDA_OPTIMIZE_BASE_URL: http://localhost:8083
          CAMUNDA_MODELER_BASE_URL: http://localhost:8070/api

      - name: Cleanup
        if: always()
        run: docker-compose -f docker/docker-compose.yml -f docker/docker-compose-modeler.yaml down
